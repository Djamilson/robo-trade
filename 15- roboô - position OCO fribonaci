///////////////////////////////////////////
// Robô Fibonacci com Gerenciamento de Risco
///////////////////////////////////////////
def registrar_operacao(data, simbolo, tipo_operacao, preco_entrada, preco_saida, quantidade, lucro, razao, parametros):
    # ... (código para registrar a operação em um arquivo CSV ou banco de dados)


Input
  PercentualFiboC(95),        // Percentual de Fibonacci para compra
  PercentualFiboV(95),        // Percentual de Fibonacci para venda
  SaidaC(1640),               // Horário limite para operações de compra
  SaidaV(1640),               // Horário limite para operações de venda
  %Risco(1);                  // Percentual de risco por operação

Var
  sinalC, sinalV: Boolean;
  maxDA, minDA, vlrFiboC, vlrFiboV, vlrStopC, vlrStopV: Real;
  Capital, RiscoMaximo, LotSize: Real;

// Cálculo de indicadores
MediaC = Average(Close, media_curta);
MediaL = Average(Close, media_longa);
ATR = AvgTrueRange(14);
RSI := RSI(Close, 14);

// Cálculo do stop loss baseado no ATR
ATRMultiplier = 2  # Ajustar conforme necessário
StopLoss = Close - (ATR * ATRMultiplier)
//StopLoss = Max(Highest(High, 10), BuyPrice * StopLossFactor)

Begin

  ////////////////////////////////////////
  // PASSO 01 | CARREGAR INDICADOR
  ////////////////////////////////////////
  maxDA := PriorCote(2);  // Máxima do dia anterior
  minDA := PriorCote(3);  // Mínima do dia anterior
  vlrFiboC := minDA + ((maxDA - minDA) * (PercentualFiboC / 100));
  vlrFiboV := maxDA - ((maxDA - minDA) * (PercentualFiboV / 100));

// Stop Loss Trailing
StopLoss = Max(Highest(High, 10), BuyPrice * StopLossFactor);

// Take Profit Trailing (Exemplo)
TakeProfit = BuyPrice * 1.2; // Ajustar o fator 1.2 conforme necessário


  ////////////////////////////////////////
  // PASSO 02 | GERENCIAMENTO DE RISCO
  ////////////////////////////////////////
  Capital := 100000; // Exemplo de capital total disponível (ajustável)
  RiscoMaximo := Capital * (%Risco / 100);
  LotSize := RiscoMaximo / abs(maxDA - minDA); // Tamanho da posição baseado no risco


// Sinal de compra mais robusto

  ////////////////////////////////////////
  // PASSO 03 | SINAIS DE ENTRADA
  ////////////////////////////////////////
  sinalC := (minima < minDA) and (maxima > minDA) and (maxima < vlrFiboC) and (time < SaidaC) and (RSI < 30);
  sinalV := (minima < maxDA) and (maxima > maxDA) and (minima > vlrFiboV) and (time < SaidaV);

  ////////////////////////////////////////
  // EXECUÇÃO DE ORDENS
  ////////////////////////////////////////
  If (sinalC) and (not HasPosition) Then
    BuyStop((maxima + MinPriceIncrement), LotSize);

  If (sinalV) and (not HasPosition) Then
    SellShortStop((minima - MinPriceIncrement), LotSize);

  ////////////////////////////////////////
  // GERENCIAMENTO DE POSIÇÕES
  ////////////////////////////////////////
  If (IsBought) Then
  Begin
    vlrStopC := BuyPrice - abs(vlrFiboC - BuyPrice);
    SellToCoverLimit(vlrFiboC);
    SellToCoverStop(vlrStopC, vlrStopC - (20 * MinPriceIncrement));

    If (fechamento > vlrFiboC) or (fechamento < vlrStopC) Then
      ClosePosition;
     // Verificar se o preço atingiu o stop loss
      
            if (Low < StopLoss) or (High > TakeProfit) then
            ClosePosition;
            // Registrar a operação no journal
            registrar_operacao(...)

if (High > TakeProfit) then
            // Aumentar o stop loss ou reduzir a posição
            StopLoss = BuyPrice * 1.1;
            // Reduzir o tamanho da posição
  End
  Else If (IsSold) Then
  Begin
    vlrStopV := SellPrice + abs(SellPrice - vlrFiboV);
    BuyToCoverLimit(vlrFiboV);
    BuyToCoverStop(vlrStopV, vlrStopV + (20 * MinPriceIncrement));

    If (fechamento < vlrFiboV) or (fechamento > vlrStopV) Then
      ClosePosition;

 if (High > StopLoss) or (Low < TakeProfit) then
            ClosePosition;

        // Verificar se o preço atingiu o take profit (ações específicas)
        if (Low < TakeProfit) then
            // Aumentar o stop loss ou reduzir a posição
            StopLoss = SellPrice * 0.9;
            // Reduzir o tamanho da posição
            // Registrar a operação no journal
            registrar_operacao(...)
  End;

  ////////////////////////////////////////
  // SAÍDA POR HORÁRIO
  ////////////////////////////////////////
  If (HasPosition) and (time >= SaidaC) Then
    ClosePosition;

  ////////////////////////////////////////
  // COLORAÇÃO
  ////////////////////////////////////////
  If sinalC Then PaintBar(clLime)
  Else If sinalV Then PaintBar(clRed);

  ////////////////////////////////////////
  // PLOTAGEM DOS NÍVEIS DE FIBONACCI
  ////////////////////////////////////////
  Plot(maxDA, "Máxima Anterior", clYellow);
  Plot2(minDA, "Mínima Anterior", clBlue);
  Plot5(vlrFiboC, "Fibo Compra", clLime);
  Plot6(vlrFiboV, "Fibo Venda", clRed);

  ////////////////////////////////////////
  // LIMPEZA DE GRÁFICO (APÓS O PRIMEIRO CANDLE)
  ////////////////////////////////////////
  If (ContadorDeCandle = 1) Then
  Begin
    NoPlot(1);
    NoPlot(2);
  End;

End;
